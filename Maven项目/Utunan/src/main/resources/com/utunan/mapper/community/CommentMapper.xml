<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.utunan.mapper.community.CommentMapper">
    <resultMap id="commentResultMap" type="com.utunan.pojo.community.Comment">
        <id property="commentId" column="commentId"/>
        <result property="quizId" column="quizId"/>
        <result property="userId" column="userId"/>
        <result property="commentContent" column="commentContent"/>
        <result property="commentTime" column="commentTime"/>
        <result property="commentPraiseCount" column="commentPraiseCount"/>
        <result property="replyCommentId" column="replyCommentId"/>
        <association property="quiz" javaType="com.utunan.pojo.community.Quiz">
            <id property="quizId" column="quizId"/>
            <result property="userId" column="userId"/>
            <result property="quizTitle" column="quizTitle"/>
            <result property="quizContent" column="quizContent"/>
            <result property="releaseTime" column="releaseTime"/>
            <result property="praiseCount" column="praiseCount"/>
        </association>
        <association property="user" javaType="com.utunan.pojo.user.User">
            <id property="userId" column="userId"/>
            <result property="userEmail" column="userEmail"/>
            <result property="userTelephone" column="userTelephone"/>
            <result property="userPassword" column="userPassword"/>
            <result property="userIdentity" column="userIdentity"/>
            <result property="examTime" column="examTime"/>
            <result property="registerTime" column="registerTime"/>
            <result property="userHeadImg" column="userHeadImg"/>
            <result property="userNickName" column="userNickName"/>
            <result property="userSchool" column="userSchool"/>
            <result property="dreamSchool" column="dreamSchool"/>
            <result property="userIntegral" column="userIntegral"/>
        </association>
    </resultMap>
    <!-- 插入数据，这里commentId是自动递增的，所以不需要插入 -->
    <insert id="toInsert" parameterType="com.utunan.pojo.community.Comment">
        insert into comment(quizId,userId,commentContent,commentTime,commentPraiseCount,replyCommentId) values(#{quizId},#{userId},#{commentContent},#{commentTime},#{commentPraiseCount},#{replyCommentId})
    </insert>

    <!--根据回答quizId最大查询，每次只查一条-->
    <select id="getComment" resultType="com.utunan.pojo.community.Comment">
        select * from commemt where commentId=(select max(commentId) from comment)
    </select>

    <!--王碧云 根据quizId查询评论列表（子评论除外）(默认：根据时间排序)-->
    <select id="findCommentListByQuizId" resultMap="commentResultMap">
        select *
        from comment
        join user on comment.userId=user.userId
        where
        quizId = #{quizId} and replyCommentId is null
        order by commentTime asc
    </select>

    <!--王碧云 根据热度返回评论列表-->
    <select id="findCommentListByPraiseCount" resultMap="commentResultMap">
        select *
        from comment
        join user on comment.userId=user.userId
        where
        quizId = #{quizId} and replyCommentId is null
        order by commentPraiseCount desc
    </select>

    <!--王碧云 根据commentId查询子评论-->
    <select id="findChildCommentListByCommentId" resultMap="commentResultMap">
        select *
        from comment
        join user on comment.userId=user.userId
        where
        replyCommentId=#{commentId}
    </select>

    <!--更新quiz表点赞数-->
    <update id="updatePraiseCount" parameterType="java.lang.Long">
        update comment set praiseCount=#{commentPraiseCount}+1 where commentId=#{commentId}
    </update>

    <!--根据搜索条件查询回答列表-->
    <select id="findCommentListBySearch" resultMap="commentResultMap">
        select *
        from comment c
        join quiz q on c.quizId=q.quizId
        where c.commentContent like #{searchValue}
        limit #{pageNum},#{pageSize}
    </select>
    <!--根据搜索条件查询回答数量-->
    <select id="countCommentBySearch" resultType="java.lang.Long">
        select count(*)
        from comment
        where commentContent like #{searchValue}
    </select>
</mapper>